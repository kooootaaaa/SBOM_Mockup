@page "/machine/{MachineId}"
@using System.Text.Json
@using System.Net.Http
@using System.Text
@inject HttpClient Http

<PageTitle>機械詳細 - @MachineId</PageTitle>

<style>
    .card-modern {
        border: none;
        box-shadow: 0 2px 8px rgba(0,0,0,0.1);
        border-radius: 8px;
    }
    
    .card-modern .card-header {
        background: #0d6efd;
        color: white;
        border-radius: 8px 8px 0 0;
        border: none;
        padding: 0.75rem 1rem;
    }
    
    .form-group-modern {
        margin-bottom: 1rem;
    }
    
    .form-label-modern {
        font-weight: 600;
        color: #495057;
        margin-bottom: 0.25rem;
        font-size: 0.875rem;
    }
    
    .form-control-modern {
        border: 1px solid #ced4da;
        border-radius: 4px;
        padding: 0.5rem;
        transition: all 0.2s ease;
        font-size: 0.875rem;
    }
    
    .form-control-modern:focus {
        border-color: #0d6efd;
        box-shadow: 0 0 0 0.2rem rgba(13, 110, 253, 0.25);
        outline: none;
    }
    
    .btn-modern-primary {
        background: #0d6efd;
        border: 1px solid #0d6efd;
        color: white;
        border-radius: 4px;
        padding: 0.5rem 1rem;
        font-weight: 600;
        transition: all 0.2s ease;
    }
    
    .btn-modern-primary:hover {
        background: #0b5ed7;
        border-color: #0a58ca;
        color: white;
    }
    
    .btn-modern-secondary {
        background: #6c757d;
        border: 1px solid #6c757d;
        color: white;
        border-radius: 4px;
        padding: 0.5rem 1rem;
        font-weight: 600;
        transition: all 0.2s ease;
    }
    
    .btn-modern-secondary:hover {
        background: #5c636a;
        border-color: #565e64;
        color: white;
    }
    
    .nav-tabs-modern {
        border-bottom: 2px solid #dee2e6;
        margin-bottom: 0;
    }
    
    .nav-tabs-modern .nav-link {
        border: 1px solid transparent;
        border-bottom: none;
        border-radius: 0.375rem 0.375rem 0 0;
        color: #6c757d;
        font-weight: 500;
        padding: 0.75rem 1.25rem;
        margin-right: 0.125rem;
        margin-bottom: -2px;
        background-color: #e9ecef;
        transition: all 0.2s ease;
        cursor: pointer;
        text-decoration: none;
    }
    
    .nav-tabs-modern .nav-link:hover {
        background-color: #dee2e6;
        border-color: #dee2e6 #dee2e6 transparent;
    }
    
    .nav-tabs-modern .nav-link.active {
        background: white;
        color: #0d6efd;
        border-color: #dee2e6 #dee2e6 white;
        border-bottom: 2px solid white;
        position: relative;
        z-index: 1;
    }
    
    .tab-content-card {
        border-top: none;
        border-radius: 0 0 0.375rem 0.375rem;
        margin-top: -1px;
    }
    
    /* 個体情報用のグレー背景（基本情報と同じ濃さ） */
    .bg-individual-info {
        background-color: #dee2e6 !important;
        border-bottom: 1px solid #ced4da;
    }
    
    .bg-individual-info h6 {
        color: #495057 !important;
        font-weight: 600;
    }
    
    /* 基本情報・詳細情報用の濃いグレー背景 */
    .bg-info-section {
        background-color: #dee2e6 !important;
        border-bottom: 1px solid #ced4da;
    }
    
    .bg-info-section h6 {
        color: #495057 !important;
        font-weight: 600;
    }
    
    .compact-layout {
        margin-bottom: 0.5rem;
    }
    
    .compact-card {
        background: #f8f9fa;
        border: 1px solid #e9ecef;
        margin-bottom: 1rem;
    }
</style>

<!-- Header Section -->
<div class="mb-2 pb-2 border-bottom border-2">
    <h1 class="h3 mb-0 text-primary fw-bold">機械詳細 <small class="text-muted fs-6">（画面No.2 - MachineDetail.razor）</small></h1>
</div>

@if (isLoading)
{
    <div class="text-center p-4">
        <div class="spinner-border" role="status">
            <span class="visually-hidden">読み込み中...</span>
        </div>
    </div>
}
else if (!string.IsNullOrEmpty(errorMessage))
{
    <div class="alert alert-danger">
        @errorMessage
    </div>
}
else
{
<div class="card shadow-sm mb-3">
    <div class="card-header bg-individual-info border-0 py-2">
        <h6 class="mb-0 fw-semibold small">個体情報</h6>
    </div>
    <div class="card-body py-3">
        <div class="row g-2">
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">型式 <span class="text-danger">*</span></label>
                    <input class="form-control form-control-modern @(string.IsNullOrWhiteSpace(machine.Model) && !string.IsNullOrEmpty(errorMessage) ? "is-invalid" : "")" @bind="machine.Model" required />
                </div>
            </div>
            <div class="col-md-1">
                <div class="compact-layout">
                    <label class="form-label-modern">枝番</label>
                    <input class="form-control form-control-modern" @bind="machine.BranchNo" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="compact-layout">
                    <label class="form-label-modern">機種名</label>
                    <input class="form-control form-control-modern" @bind="machine.TypeName" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">ロットNo.</label>
                    <input class="form-control form-control-modern" @bind="machine.LotNo" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">ロット連番</label>
                    <input class="form-control form-control-modern" @bind="machine.LotSerial" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">号機番号</label>
                    <input class="form-control form-control-modern" @bind="machine.MachineNo" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">案件番号</label>
                    <input class="form-control form-control-modern" @bind="machine.ProjectNo" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">中古案件番号</label>
                    <input class="form-control form-control-modern" @bind="machine.UsedProjectNo" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">取付タンク番号</label>
                    <input class="form-control form-control-modern" @bind="machine.TankNo" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">注文書識別番号</label>
                    <input class="form-control form-control-modern" @bind="machine.OrderId" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">預けNo.</label>
                    <input class="form-control form-control-modern" @bind="machine.DepositNo" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">製造番号</label>
                    <input class="form-control form-control-modern" @bind="machine.Id" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">河北製造番号</label>
                    <input class="form-control form-control-modern" @bind="machine.KahokuId" />
                </div>
            </div>
            <div class="col-md-2">
                <div class="compact-layout">
                    <label class="form-label-modern">過去製造番号</label>
                    <input class="form-control form-control-modern" @bind="machine.PastId" />
                </div>
            </div>
            <div class="col-md-3">
                <div class="compact-layout">
                    <label class="form-label-modern">社内メモ</label>
                    <textarea class="form-control form-control-modern" rows="2" @bind="machine.InternalMemo"></textarea>
                </div>
            </div>
            <div class="col-md-3 d-flex align-items-end gap-3">
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" @bind="machine.IsMasterOut" />
                    <label class="form-check-label small">マスタ外登録</label>
                </div>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" @bind="machine.IsDifficult" />
                    <label class="form-check-label small">難</label>
                </div>
                <div class="form-check">
                    <input type="checkbox" class="form-check-input" @bind="machine.IsNonStock" />
                    <label class="form-check-label small">非在庫品</label>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- タブ切替 -->
<ul class="nav nav-tabs nav-tabs-modern">
    <li class="nav-item">
        <a class="nav-link @(activeTab==0 ? "active" : "")" href="#" @onclick="() => activeTab=0" @onclick:preventDefault="true">製造情報</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(activeTab==1 ? "active" : "")" href="#" @onclick="() => activeTab=1" @onclick:preventDefault="true">出荷情報</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(activeTab==2 ? "active" : "")" href="#" @onclick="() => activeTab=2" @onclick:preventDefault="true">預け情報</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(activeTab==3 ? "active" : "")" href="#" @onclick="() => activeTab=3" @onclick:preventDefault="true">メンテナンス情報</a>
    </li>
    <li class="nav-item">
        <a class="nav-link @(activeTab==4 ? "active" : "")" href="#" @onclick="() => activeTab=4" @onclick:preventDefault="true">クレーム情報</a>
    </li>
</ul>
<div class="card shadow-sm tab-content-card">
    <div class="card-body py-3">
        @if (activeTab == 0)
        {
            <div class="row g-3">
                <div class="col-lg-6">
                    <div class="compact-card">
                        <div class="card-header bg-info-section py-2">
                            <h6 class="mb-0 small">基本情報</h6>
                        </div>
                        <div class="card-body p-3">
                            <div class="row g-2">
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">製造種別</label>
                                        <input class="form-control form-control-modern" @bind="machine.ProductionType" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">現在地</label>
                                        <input class="form-control form-control-modern" @bind="machine.Location" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">機械状態</label>
                                        <input class="form-control form-control-modern" @bind="machine.Status" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">管理区分</label>
                                        <input class="form-control form-control-modern" @bind="machine.ManagementType" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">完成予定日</label>
                                        <input type="date" class="form-control form-control-modern" @bind-value="machine.ScheduledDate" @bind-value:event="oninput" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">仕掛品完成日</label>
                                        <input type="date" class="form-control form-control-modern" @bind-value="machine.InProcessDate" @bind-value:event="oninput" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">完成日</label>
                                        <input type="date" class="form-control form-control-modern" @bind-value="machine.CompletionDate" @bind-value:event="oninput" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">CR登録日</label>
                                        <input type="date" class="form-control form-control-modern" @bind-value="machine.CRDate" @bind-value:event="oninput" />
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-lg-6">
                    <div class="compact-card">
                        <div class="card-header bg-info-section py-2">
                            <h6 class="mb-0 small">詳細情報</h6>
                        </div>
                        <div class="card-body p-3">
                            <div class="row g-2">
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">メーカーオプション</label>
                                        <textarea class="form-control form-control-modern" rows="3" @bind="machine.MakerOption"></textarea>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">客先仕様</label>
                                        <textarea class="form-control form-control-modern" rows="3" @bind="machine.CustomerSpec"></textarea>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">仕様変更履歴</label>
                                        <textarea class="form-control form-control-modern" rows="2" @bind="machine.SpecHistory"></textarea>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">改造日</label>
                                        <input type="date" class="form-control form-control-modern" @bind-value="machine.ModifyDate" @bind-value:event="oninput" />
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">組立指示書備考</label>
                                        <textarea class="form-control form-control-modern" rows="2" @bind="machine.AssemblyNote"></textarea>
                                    </div>
                                </div>
                                <div class="col-6">
                                    <div class="compact-layout">
                                        <label class="form-label-modern">改造内容</label>
                                        <textarea class="form-control form-control-modern" rows="2" @bind="machine.ModifyContent"></textarea>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        else if (activeTab == 1)
        {
            <div class="text-center py-5">
                <p class="text-muted mb-0">出荷情報</p>
            </div>
        }
        else if (activeTab == 2)
        {
            <div class="text-center py-5">
                <p class="text-muted mb-0">預け情報</p>
            </div>
        }
        else if (activeTab == 3)
        {
            <div class="text-center py-5">
                <p class="text-muted mb-0">メンテナンス情報</p>
            </div>
        }
        else if (activeTab == 4)
        {
            <div class="text-center py-5">
                <p class="text-muted mb-0">クレーム情報</p>
            </div>
        }
    </div>
</div>

<div class="mt-3 mb-4">
    <div class="d-flex justify-content-end gap-2">
        <button class="btn btn-modern-primary" style="width: 180px" @onclick="NavigateToPartsList">
            部品一覧画面を開く
        </button>
        <button class="btn btn-modern-primary" style="width: 120px" @onclick="OnRegister" disabled="@isLoading">
            @if (isLoading)
            {
                <span class="spinner-border spinner-border-sm me-1" role="status"></span>
                <span>登録中...</span>
            }
            else
            {
                <span>登録</span>
            }
        </button>
        <a href="/" class="btn btn-modern-secondary" style="width: 120px">
            キャンセル
        </a>
    </div>
</div>
}

@code {
    [Parameter]
    public string? MachineId { get; set; }

    private int activeTab = 0;

    private Machine machine = new Machine();

    [Inject]
    private NavigationManager Nav { get; set; } = default!;

    private string apiBaseUrl = "http://localhost:5196/api";
    private bool isLoading = true;
    private string errorMessage = "";

    protected override async Task OnInitializedAsync()
    {
        await LoadMachineData();
    }
    
    private async Task LoadMachineData()
    {
        try
        {
            isLoading = true;
            var response = await Http.GetAsync($"{apiBaseUrl}/Machine/{MachineId}");
            
            if (response.IsSuccessStatusCode)
            {
                var jsonContent = await response.Content.ReadAsStringAsync();
                var data = JsonSerializer.Deserialize<Dictionary<string, object>>(jsonContent, new JsonSerializerOptions
                {
                    PropertyNameCaseInsensitive = true
                });
                
                if (data != null)
                {
                    machine = new Machine
                    {
                        Id = GetStringValue(data, "製造番号"),
                        ManagementId = data.ContainsKey("機械管理ID") ? GetStringValue(data, "機械管理ID") : null,
                        Model = GetStringValue(data, "型式"),
                        BranchNo = GetStringValue(data, "ItemSubCode"),
                        TypeName = GetStringValue(data, "機種名"),
                        LotNo = GetStringValue(data, "ロット番号"),
                        LotSerial = GetStringValue(data, "ロット連番"),
                        MachineNo = GetStringValue(data, "号機番号"),
                        ProjectNo = GetStringValue(data, "案件番号"),
                        UsedProjectNo = GetStringValue(data, "中古番号"),
                        TankNo = GetStringValue(data, "タンク製造番号") ?? GetStringValue(data, "取付タンク番号"),
                        OrderId = GetStringValue(data, "OrderSerialNo"),
                        DepositNo = GetStringValue(data, "預けNo") ?? GetStringValue(data, "預けNo."),
                        KahokuId = GetStringValue(data, "河北製造番号"),
                        PastId = GetStringValue(data, "過去製造番号"),
                        InternalMemo = GetStringValue(data, "備考1"),
                        IsMasterOut = GetBoolValue(data, "マスタ外登録CH"),
                        IsDifficult = GetBoolValue(data, "傷有FLG"),
                        IsNonStock = GetBoolValue(data, "非在庫品FLG"),
                        ProductionType = GetStringValue(data, "製造種別"),
                        Location = GetStringValue(data, "現所在地") ?? GetStringValue(data, "現在地"),
                        Status = GetStringValue(data, "機械状態"),
                        ManagementType = GetStringValue(data, "管理区分"),
                        ScheduledDate = GetDateValue(data, "完成予定日"),
                        InProcessDate = GetDateValue(data, "仕掛品完成日"),
                        CompletionDate = GetDateValue(data, "完成日"),
                        CRDate = GetDateValue(data, "CR登録日"),
                        MakerOption = GetStringValue(data, "メーカーオプション"),
                        CustomerSpec = GetStringValue(data, "客先仕様"),
                        SpecHistory = GetStringValue(data, "仕様変更履歴"),
                        ModifyDate = GetDateValue(data, "改造日"),
                        AssemblyNote = GetStringValue(data, "製造時備考"),
                        ModifyContent = GetStringValue(data, "改造内容")
                    };
                }
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                try
                {
                    var errorData = JsonSerializer.Deserialize<Dictionary<string, object>>(errorContent);
                    if (errorData != null && errorData.ContainsKey("error"))
                    {
                        errorMessage = $"APIエラー: {errorData["error"]}";
                    }
                    else
                    {
                        errorMessage = $"APIエラー: {response.StatusCode} - {errorContent}";
                    }
                }
                catch
                {
                    errorMessage = $"APIエラー: {response.StatusCode} - {errorContent}";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"データ取得エラー: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }
    
    private string GetStringValue(Dictionary<string, object> data, string key)
    {
        if (data.TryGetValue(key, out var value))
        {
            return value?.ToString() ?? "";
        }
        return "";
    }
    
    private bool GetBoolValue(Dictionary<string, object> data, string key)
    {
        if (data.TryGetValue(key, out var value))
        {
            if (value is JsonElement element)
            {
                // smallint型の値を処理
                if (element.ValueKind == JsonValueKind.Number)
                {
                    return element.GetInt32() != 0;
                }
            }
            // 数値文字列の場合
            if (int.TryParse(value?.ToString(), out int intValue))
            {
                return intValue != 0;
            }
            // bool文字列の場合（念のため）
            if (bool.TryParse(value?.ToString(), out bool result))
            {
                return result;
            }
        }
        return false;
    }
    
    private DateTime? GetDateValue(Dictionary<string, object> data, string key)
    {
        if (data.TryGetValue(key, out var value) && value != null)
        {
            if (value is JsonElement element && element.ValueKind != JsonValueKind.Null)
            {
                return element.GetDateTime();
            }
            if (DateTime.TryParse(value.ToString(), out DateTime date))
            {
                return date;
            }
        }
        return null;
    }

    private async Task OnRegister()
    {
        // 型式の必須チェック
        if (string.IsNullOrWhiteSpace(machine.Model))
        {
            errorMessage = "型式は必須項目です。入力してください。";
            return;
        }
        
        try
        {
            isLoading = true;
            errorMessage = "";
            
            // 送信用のデータを準備
            var updateData = new Dictionary<string, object>
            {
                { "型式", machine.Model },
                { "ItemSubCode", machine.BranchNo },
                { "機種名", machine.TypeName },
                { "ロット番号", machine.LotNo },
                { "ロット連番", machine.LotSerial },
                { "号機番号", machine.MachineNo },
                { "案件番号", machine.ProjectNo },
                { "中古番号", machine.UsedProjectNo },
                { "タンク製造番号", machine.TankNo },
                { "OrderSerialNo", machine.OrderId },
                { "預けNo", machine.DepositNo },
                { "河北製造番号", machine.KahokuId },
                { "過去製造番号", machine.PastId },
                { "備考1", machine.InternalMemo },
                { "マスタ外登録CH", machine.IsMasterOut ? 1 : 0 },
                { "傷有FLG", machine.IsDifficult ? 1 : 0 },
                { "非在庫品FLG", machine.IsNonStock ? 1 : 0 },
                { "製造種別", machine.ProductionType },
                { "現所在地", machine.Location },
                { "機械状態", machine.Status },
                { "管理区分", machine.ManagementType },
                { "完成予定日", machine.ScheduledDate?.ToString("yyyy-MM-dd") ?? "" },
                { "仕掛品完成日", machine.InProcessDate?.ToString("yyyy-MM-dd") ?? "" },
                { "完成日", machine.CompletionDate?.ToString("yyyy-MM-dd") ?? "" },
                { "CR登録日", machine.CRDate?.ToString("yyyy-MM-dd") ?? "" },
                { "メーカーオプション", machine.MakerOption },
                { "客先仕様", machine.CustomerSpec },
                { "仕様変更履歴", machine.SpecHistory },
                { "改造日", machine.ModifyDate?.ToString("yyyy-MM-dd") ?? "" },
                { "製造時備考", machine.AssemblyNote },
                { "改造内容", machine.ModifyContent }
            };
            
            var jsonContent = JsonSerializer.Serialize(updateData);
            var content = new StringContent(jsonContent, System.Text.Encoding.UTF8, "application/json");
            
            var response = await Http.PutAsync($"{apiBaseUrl}/Machine/{MachineId}", content);
            
            if (response.IsSuccessStatusCode)
            {
                // 登録成功後、画面を閉じる（ホーム画面に遷移）
                Nav.NavigateTo("/");
            }
            else
            {
                var errorContent = await response.Content.ReadAsStringAsync();
                try
                {
                    var errorData = JsonSerializer.Deserialize<Dictionary<string, object>>(errorContent);
                    if (errorData != null && errorData.ContainsKey("error"))
                    {
                        errorMessage = $"登録エラー: {errorData["error"]}";
                    }
                    else
                    {
                        errorMessage = $"登録エラー: {response.StatusCode}";
                    }
                }
                catch
                {
                    errorMessage = $"登録エラー: {response.StatusCode} - {errorContent}";
                }
            }
        }
        catch (Exception ex)
        {
            errorMessage = $"登録エラー: {ex.Message}";
        }
        finally
        {
            isLoading = false;
        }
    }

    private void NavigateToPartsList()
    {
        var queryParams = new Dictionary<string, string>
        {
            ["serialno"] = Uri.EscapeDataString(machine.Id ?? ""),
            ["model"] = Uri.EscapeDataString(machine.Model ?? ""),
            ["typename"] = Uri.EscapeDataString(machine.TypeName ?? ""),
            ["completion"] = machine.CompletionDate?.ToString("yyyy-MM-dd") ?? "",
            ["location"] = Uri.EscapeDataString(machine.Location ?? ""),
            ["status"] = Uri.EscapeDataString(machine.Status ?? ""),
            ["management"] = Uri.EscapeDataString(machine.ManagementType ?? ""),
            ["projectno"] = Uri.EscapeDataString(machine.ProjectNo ?? ""),
            ["lotno"] = Uri.EscapeDataString(machine.LotNo ?? "")
        };
        
        var queryString = string.Join("&", queryParams.Select(kv => $"{kv.Key}={kv.Value}"));
        // 機械管理IDがある場合はそれを使用、ない場合は製造番号を使用
        var machineIdParam = machine.ManagementId ?? MachineId;
        Nav.NavigateTo($"/machine/{machineIdParam}/parts?{queryString}");
    }

    public class Machine
    {
        public string Id { get; set; } = "";
        public string? ManagementId { get; set; }
        public string Model { get; set; } = "";
        public string BranchNo { get; set; } = "";
        public string TypeName { get; set; } = "";
        public string LotNo { get; set; } = "";
        public string LotSerial { get; set; } = "";
        public string MachineNo { get; set; } = "";
        public string ProjectNo { get; set; } = "";
        public string UsedProjectNo { get; set; } = "";
        public string TankNo { get; set; } = "";
        public string OrderId { get; set; } = "";
        public string DepositNo { get; set; } = "";
        public string KahokuId { get; set; } = "";
        public string PastId { get; set; } = "";
        public string InternalMemo { get; set; } = "";
        public bool IsMasterOut { get; set; }
        public string ProductionType { get; set; } = "";
        public string Location { get; set; } = "";
        public string Status { get; set; } = "";
        public string ManagementType { get; set; } = "";
        public DateTime? ScheduledDate { get; set; }
        public DateTime? InProcessDate { get; set; }
        public DateTime? CompletionDate { get; set; }
        public DateTime? CRDate { get; set; }
        public bool IsDifficult { get; set; }
        public bool IsNonStock { get; set; }
        public string MakerOption { get; set; } = "";
        public string CustomerSpec { get; set; } = "";
        public string SpecHistory { get; set; } = "";
        public DateTime? ModifyDate { get; set; }
        public string AssemblyNote { get; set; } = "";
        public string ModifyContent { get; set; } = "";
    }
} 